class Node{
    int val;
    Node next;
    Node(int val){
        this.val=val;
        this.next=null;
        
    }
    Node(int val, Node next){
        this.val=val;
        this.next=next;
    }                                                                                                                                                                                                                                   
}
public class Operation {
    Node head;
    int size;
    public int size()
    {
        return size;
    }
    public void insertAtFirst(int val)
    {
        Node newNode=new Node(val);
        if(head==null)
        {
            head=newNode;
            return;
        }
        newNode.next=head;
        head=newNode;
    }
    
    public void insertAtPosition(int val,int pos)
    {
        Node newNode=new Node(val);
        if(pos<0)
        {
            System.out.println("Index not found");
        }
        if(pos==0)
        {
            newNode.next=head;
            head=newNode;
            return;
        }
        Node prev=head;
        for(int i=0;i<pos-1;i++)
        {
            prev=prev.next;
        }
        newNode.next=prev.next;
        prev.next=newNode;
    }
    public void printList(Node head)
    {
        if(head==null)
        {
            System.out.println("List is empty");

        }
        Node temp=head;
        while(temp.next!=null)
        {
            System.out.print(temp.val +"-->");
            temp=temp.next;
        }
        System.out.print(temp.val +"-->");
        System.out.println("null");

    }
    void deleteFirst()
    {
        Node temp=head;
        if(head==null){
            System.out.print("List is empty");
            return;
        }
        head=temp.next;
    }
    
     
    void deleteAtPosition(int index)
    {
        Node temp=head;
        if(index==0)
        {
            head=head.next;
            //head=null;
            return;
        }
        if(index<0 || index>size)
        {
            System.out.println("Please enter valid index");
        }
        for(int i=0;i<index-1;i++)
        {
            temp=temp.next;

        }
        temp.next=temp.next.next;
    }
   
public static void main(String args[])
{
    Operation op= new Operation();
    op.head=new Node(1);
    op.head.next=new Node(2);
    op.head.next.next=new Node(3);
    op.insertAtFirst(4);
    op.insertAtLast(9);
    //op.insertAtPosition(6, 2);
    op.printList(op.head);
    op.deleteAtPosition(0);
    //op.printList(op.head);
    //op.deleteFirst();
    op.printList(op.head);
    //op.search(op.head, 2);
    

}

}
